-- Drop tables:
DROP TABLE IF EXISTS t_trainers;
DROP TABLE IF EXISTS t_accounts;
DROP TABLE IF EXISTS t_trainings;
DROP TABLE IF EXISTS t_roles;
DROP TABLE IF EXISTS t_skills;
DROP TABLE IF EXISTS t_activities;
DROP TABLE IF EXISTS t_certifications;
DROP TABLE IF EXISTS t_certification_levels;

-- Drop specific sequences:
DROP SEQUENCE IF EXISTS trainers_code_seq;

-- Create tables
CREATE TABLE t_certification_levels (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	code CHAR(5) NOT NULL,
	french_level VARCHAR(3) NOT NULL,
	european_level SMALLINT NOT NULL,
	equivalence VARCHAR(120) NOT NULL,
	CONSTRAINT certification_levels_french_level_uk UNIQUE (french_level),
	CONSTRAINT certification_levels_european_level_uk UNIQUE (european_level),
	CONSTRAINT certification_levels_pk PRIMARY KEY (id)
);

CREATE UNIQUE INDEX certification_levels_code_uk ON t_certification_levels(UPPER(code));

CREATE TABLE t_certifications (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	code VARCHAR(10) NOT NULL,
	certification_name VARCHAR(50) NOT NULL,
	acronym VARCHAR(4) NOT NULL,
	start_year SMALLINT NOT NULL,
	description VARCHAR(5000) NULL,
	certification_level_id INTEGER NOT NULL,
	CONSTRAINT certifications_pk PRIMARY KEY (id),
	CONSTRAINT certifications_certification_level_fk FOREIGN KEY (certification_level_id) REFERENCES t_certification_levels(id)
);

CREATE UNIQUE INDEX certifications_code_uk ON t_certifications(UPPER(code));

CREATE TABLE t_roles (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	code VARCHAR(15) NOT NULL,
	role_name VARCHAR(20) NOT NULL,
	CONSTRAINT roles_pk PRIMARY KEY (id)
);

CREATE UNIQUE INDEX roles_code_uk ON t_roles(UPPER(code));

CREATE TABLE t_accounts (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	username VARCHAR(255) NOT NULL,
	account_password CHAR(60) NOT NULL,
	firstname VARCHAR(100) NOT NULL,
	lastname VARCHAR(100) NOT NULL,
	role_id INTEGER NOT NULL,
	CONSTRAINT accounts_pk PRIMARY KEY (id),
	CONSTRAINT accounts_role_fk FOREIGN KEY (role_id) REFERENCES t_roles(id)
);

CREATE UNIQUE INDEX accounts_username_uk ON t_accounts(UPPER(username));

CREATE TABLE t_trainers (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	code CHAR(10) NOT NULL,
	account_id INTEGER NOT NULL,
	CONSTRAINT trainers_account_id_uk UNIQUE (account_id),
	CONSTRAINT trainers_pk PRIMARY KEY (id),
	CONSTRAINT trainers_account_fk FOREIGN KEY (account_id) REFERENCES t_accounts(id)
);

CREATE UNIQUE INDEX trainers_code_uk ON t_trainers(UPPER(code));

CREATE TABLE t_activities (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	code VARCHAR(15) NOT NULL,
	activity_name VARCHAR(150) NOT NULL,
	description VARCHAR(5000) NULL,
	certification_id INTEGER NOT NULL,
	CONSTRAINT activities_pk PRIMARY KEY (id),
	CONSTRAINT activities_certification_fk FOREIGN KEY (certification_id) REFERENCES t_certifications(id)
);

CREATE UNIQUE INDEX activities_code_uk ON t_activities(UPPER(code));

CREATE TABLE t_skills (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	code VARCHAR(15) NOT NULL,
	skill_name VARCHAR(150) NOT NULL,
	description VARCHAR(5000) NULL,
	activity_id INTEGER NOT NULL,
	CONSTRAINT skills_pk PRIMARY KEY (id),
	CONSTRAINT skills_activity_fk FOREIGN KEY (activity_id) REFERENCES t_activities(id)
);

CREATE UNIQUE INDEX skills_code_uk ON t_skills(UPPER(code));

CREATE TABLE t_trainings (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY,
	training_name VARCHAR(150) NOT NULL,
	start_date DATE NOT NULL,
	end_date DATE NOT NULL,
	description VARCHAR(2000) NOT NULL,
	certification_id INTEGER NOT NULL,
	CONSTRAINT trainings_pk PRIMARY KEY (id),
	CONSTRAINT trainings_certification_fk FOREIGN KEY (certification_id) REFERENCES t_certifications(id)
);

CREATE UNIQUE INDEX trainings_name_uk ON t_trainings(UPPER(training_name));

CREATE SEQUENCE trainers_code_seq;
